// <auto-generated />
using System;
using FootballClubAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FootballClubAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FootballClubLibrary.Models.Klub", b =>
                {
                    b.Property<Guid>("IdKlub")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Stadion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Trofea")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdKlub");

                    b.ToTable("Kluby");
                });

            modelBuilder.Entity("FootballClubLibrary.Models.Pilkarz", b =>
                {
                    b.Property<Guid>("IdPilkarz")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdKlubu")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Pozycja")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal>("Wynagrodzenie")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdPilkarz");

                    b.HasIndex("IdKlubu");

                    b.ToTable("Pilkarze");
                });

            modelBuilder.Entity("FootballClubLibrary.Models.Pracownik", b =>
                {
                    b.Property<Guid>("IdPracownik")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdZarzadu")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PESEL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Wiek")
                        .HasColumnType("int");

                    b.Property<string>("WykonywanaFunkcja")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("IdPracownik");

                    b.HasIndex("IdZarzadu");

                    b.ToTable("Pracownicy");
                });

            modelBuilder.Entity("FootballClubLibrary.Models.Statystyka", b =>
                {
                    b.Property<Guid>("IdStatystyka")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Asysty")
                        .HasColumnType("int");

                    b.Property<int>("Gole")
                        .HasColumnType("int");

                    b.Property<Guid>("IdPilkarz")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Kartki")
                        .HasColumnType("int");

                    b.Property<double>("Ocena")
                        .HasColumnType("float");

                    b.Property<double>("PrzebiegnietyDystans")
                        .HasColumnType("float");

                    b.HasKey("IdStatystyka");

                    b.HasIndex("IdPilkarz");

                    b.ToTable("Statystki");
                });

            modelBuilder.Entity("FootballClubLibrary.Models.Zarzad", b =>
                {
                    b.Property<Guid>("IdZarzad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Budzet")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Cele")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IdKlubu")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdZarzad");

                    b.HasIndex("IdKlubu")
                        .IsUnique();

                    b.ToTable("Zarzady");
                });

            modelBuilder.Entity("KlubPilkarz", b =>
                {
                    b.Property<Guid>("ArchiwalneKlubyIdKlub")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ArchwilaniPilkarzeIdPilkarz")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ArchiwalneKlubyIdKlub", "ArchwilaniPilkarzeIdPilkarz");

                    b.HasIndex("ArchwilaniPilkarzeIdPilkarz");

                    b.ToTable("KlubPilkarz");
                });

            modelBuilder.Entity("FootballClubLibrary.Models.Pilkarz", b =>
                {
                    b.HasOne("FootballClubLibrary.Models.Klub", "Klub")
                        .WithMany("ObecniPilkarze")
                        .HasForeignKey("IdKlubu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Klub");
                });

            modelBuilder.Entity("FootballClubLibrary.Models.Pracownik", b =>
                {
                    b.HasOne("FootballClubLibrary.Models.Zarzad", "Zarzad")
                        .WithMany("Pracownicy")
                        .HasForeignKey("IdZarzadu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Zarzad");
                });

            modelBuilder.Entity("FootballClubLibrary.Models.Statystyka", b =>
                {
                    b.HasOne("FootballClubLibrary.Models.Pilkarz", "Pilkarz")
                        .WithMany("Statystyki")
                        .HasForeignKey("IdPilkarz")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pilkarz");
                });

            modelBuilder.Entity("FootballClubLibrary.Models.Zarzad", b =>
                {
                    b.HasOne("FootballClubLibrary.Models.Klub", "Klub")
                        .WithOne("Zarzad")
                        .HasForeignKey("FootballClubLibrary.Models.Zarzad", "IdKlubu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Klub");
                });

            modelBuilder.Entity("KlubPilkarz", b =>
                {
                    b.HasOne("FootballClubLibrary.Models.Klub", null)
                        .WithMany()
                        .HasForeignKey("ArchiwalneKlubyIdKlub")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FootballClubLibrary.Models.Pilkarz", null)
                        .WithMany()
                        .HasForeignKey("ArchwilaniPilkarzeIdPilkarz")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FootballClubLibrary.Models.Klub", b =>
                {
                    b.Navigation("ObecniPilkarze");

                    b.Navigation("Zarzad")
                        .IsRequired();
                });

            modelBuilder.Entity("FootballClubLibrary.Models.Pilkarz", b =>
                {
                    b.Navigation("Statystyki");
                });

            modelBuilder.Entity("FootballClubLibrary.Models.Zarzad", b =>
                {
                    b.Navigation("Pracownicy");
                });
#pragma warning restore 612, 618
        }
    }
}
